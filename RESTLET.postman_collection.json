{
	"info": {
		"_postman_id": "4f91cff1-6d17-4526-9ff8-95a65a40e04c",
		"name": "RESTLET",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Hello Restlet",
			"item": [
				{
					"name": "Restlet | Hello World",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/restlet/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restlet",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Echo Server",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/test/abcd",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"test",
								"abcd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Trace (Tracer Filter)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/accounts/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"accounts",
								""
							]
						},
						"description": "Trace results are displayed."
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Trace (Blocked Filter)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/accounts/123",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"accounts",
								"123"
							]
						},
						"description": "Trace results are displayed."
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Trace (With Query String)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/?param=value",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								""
							],
							"query": [
								{
									"key": "param",
									"value": "value"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Trace (Error, No Route!)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/123",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Trace (Method Tunneling)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/?method=options",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								""
							],
							"query": [
								{
									"key": "method",
									"value": "options"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Resource (Root | Get)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Resource (Root | Options)",
					"request": {
						"method": "OPTIONS",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8111/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Resource (Accounts | Post)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "Account #1"
						},
						"url": {
							"raw": "http://localhost:8111/accounts/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"accounts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Resource (Accounts | Get)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/accounts/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"accounts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Resource (Account | Get)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/accounts/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"accounts",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Resource (Account | Put)",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "Account #1 (Modified)"
						},
						"url": {
							"raw": "http://localhost:8111/accounts/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"accounts",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server Resource (Account | Delete)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8111/accounts/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"accounts",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JSON | Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/mail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JSON | Put",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subject\": \"RE: Message to Self\",\n  \"content\": \"Hello There! Again!\",\n  \"status\": \"Received\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/mail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JACKSON | Get (Localhost)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9000/mail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JACKSON | Put (Localhost)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subject\": \"RE: Message to Self\",\n  \"content\": \"Hello There!\",\n  \"status\": \"Received\",\n  \"message\": \"Great!\"\n}"
						},
						"url": {
							"raw": "http://localhost:9000/mail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JACKSON | Get (Docker Local)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.99.100:9000/mail",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"99",
								"100"
							],
							"port": "9000",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JACKSON | Put (Docker Local)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subject\": \"RE: Message to Self\",\n  \"content\": \"Hello There!\",\n  \"status\": \"Received\"\n}"
						},
						"url": {
							"raw": "http://192.168.99.100:9000/mail",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"99",
								"100"
							],
							"port": "9000",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Restlet Tutorial",
			"item": [
				{
					"name": "Hello | Get Hello Message",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8111/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8111",
							"path": [
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "First App | Get Contacts API",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/contacts/123",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"contacts",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "First App | Update Contacts API",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"homeAddress\": {\n    \"line1\": \"10 bd Google\",\n    \"line2\": null,\n    \"zipCode\": \"20010\",\n    \"city\": \"Mountain View\",\n    \"country\": \"USA\"\n  },\n  \"age\": 40\n}"
						},
						"url": {
							"raw": "http://localhost:8080/contacts/123",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"contacts",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "First App | Delete Contacts API",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/contacts/123",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"contacts",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth | Basic Auth Test",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "scott",
									"type": "string"
								},
								{
									"key": "password",
									"value": "tiger",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic c2NvdHQ6dGlnZXI="
							}
						],
						"url": {
							"raw": "localhost:8182",
							"host": [
								"localhost"
							],
							"port": "8182"
						}
					},
					"response": []
				},
				{
					"name": "Auth | Digest Auth Test",
					"request": {
						"auth": {
							"type": "digest",
							"digest": [
								{
									"key": "algorithm",
									"value": "MD5",
									"type": "string"
								},
								{
									"key": "username",
									"value": "scott",
									"type": "string"
								},
								{
									"key": "realm",
									"value": "TestRealm",
									"type": "string"
								},
								{
									"key": "password",
									"value": "tiger",
									"type": "string"
								},
								{
									"key": "nonce",
									"value": "MTQ3ODkzMTA5NTM0NDo0YTI5ZGJhZjJhMzRiNTJiNzQzNjZmY2I1ZjZjMDQ2Mg==",
									"type": "string"
								},
								{
									"key": "nonceCount",
									"value": "",
									"type": "string"
								},
								{
									"key": "clientNonce",
									"value": "",
									"type": "string"
								},
								{
									"key": "opaque",
									"value": "",
									"type": "string"
								},
								{
									"key": "qop",
									"value": "",
									"type": "string"
								},
								{
									"key": "disableRetryRequest",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Digest username=\"scott\", realm=\"TestRealm\", nonce=\"MTQ3ODkzMTA5NTM0NDo0YTI5ZGJhZjJhMzRiNTJiNzQzNjZmY2I1ZjZjMDQ2Mg==\", uri=\"/\", response=\"bf484dfbd07d659773d1dec08706da32\", opaque=\"\""
							}
						],
						"url": {
							"raw": "localhost:8182",
							"host": [
								"localhost"
							],
							"port": "8182"
						}
					},
					"response": []
				},
				{
					"name": "Mail | Get SSL Content (No Auth)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8183/accounts/chunkylover53/mails/123",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8183",
							"path": [
								"accounts",
								"chunkylover53",
								"mails",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mail | Get SSL Mail (Basic Auth)",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chunkylover53",
									"type": "string"
								},
								{
									"key": "password",
									"value": "pwd",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic Y2h1bmt5bG92ZXI1Mzpwd2Q="
							}
						],
						"url": {
							"raw": "https://localhost:8183/accounts/chunkylover53/mails/123",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8183",
							"path": [
								"accounts",
								"chunkylover53",
								"mails",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mail | Get SSL Mail (Digest Auth)",
					"request": {
						"auth": {
							"type": "digest",
							"digest": [
								{
									"key": "algorithm",
									"value": "MD5",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chunkylover53",
									"type": "string"
								},
								{
									"key": "realm",
									"value": "My Realm",
									"type": "string"
								},
								{
									"key": "password",
									"value": "pwd",
									"type": "string"
								},
								{
									"key": "nonce",
									"value": "MTQ3ODkzODE4MzA1MjpmODExMDU0NzEzYjYwOTZhYTM5NTY3ZjQ4MTQ5MTU1Zg==",
									"type": "string"
								},
								{
									"key": "nonceCount",
									"value": "",
									"type": "string"
								},
								{
									"key": "clientNonce",
									"value": "",
									"type": "string"
								},
								{
									"key": "opaque",
									"value": "",
									"type": "string"
								},
								{
									"key": "qop",
									"value": "",
									"type": "string"
								},
								{
									"key": "disableRetryRequest",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Digest username=\"chunkylover53\", realm=\"My Realm\", nonce=\"MTQ3ODkzODE4MzA1MjpmODExMDU0NzEzYjYwOTZhYTM5NTY3ZjQ4MTQ5MTU1Zg==\", uri=\"/accounts/chunkylover53/mails/123\", response=\"98c673e16b9fd81560eeff8eb46f5304\", opaque=\"\""
							}
						],
						"url": {
							"raw": "https://localhost:8183/accounts/chunkylover53/mails/123",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8183",
							"path": [
								"accounts",
								"chunkylover53",
								"mails",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mail | Get SSL Mail (Secret Auth)",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chunkylover53",
									"type": "string"
								},
								{
									"key": "password",
									"value": "pwd",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic Y2h1bmt5bG92ZXI1Mzpwd2Q="
							}
						],
						"url": {
							"raw": "https://localhost:8183/accounts/chunkylover53/mails/123",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8183",
							"path": [
								"accounts",
								"chunkylover53",
								"mails",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mail | Get SSL Mail (Cert Auth)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic Y2h1bmt5bG92ZXI1Mzpwd2Q="
							}
						],
						"url": {
							"raw": "https://localhost:8183/accounts/chunkylover53/mails/123",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8183",
							"path": [
								"accounts",
								"chunkylover53",
								"mails",
								"123"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Starbucks Test",
			"item": [
				{
					"name": "Post Starbucks API | Localhost",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"take-out\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"whole\",\n      \"size\": \"large\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{local_host}}:{{local_port}}/v1/starbucks/order",
							"protocol": "http",
							"host": [
								"{{local_host}}"
							],
							"port": "{{local_port}}",
							"path": [
								"v1",
								"starbucks",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Starbucks API |Docker Local",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"take-out\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"whole\",\n      \"size\": \"large\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{docker_host}}:{{docker_port}}/v1/starbucks/order",
							"protocol": "http",
							"host": [
								"{{docker_host}}"
							],
							"port": "{{docker_port}}",
							"path": [
								"v1",
								"starbucks",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Starbucks API |Docker Cloud (DNS)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"take-out\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"whole\",\n      \"size\": \"large\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{aws_host}}:{{aws_port}}/v1/starbucks/order",
							"protocol": "http",
							"host": [
								"{{aws_host}}"
							],
							"port": "{{aws_port}}",
							"path": [
								"v1",
								"starbucks",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Starbucks API |Docker Cloud (Host IP)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"take-out\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"whole\",\n      \"size\": \"large\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{aws_ip}}:{{aws_port}}/v1/starbucks/order",
							"protocol": "http",
							"host": [
								"{{aws_ip}}"
							],
							"port": "{{aws_port}}",
							"path": [
								"v1",
								"starbucks",
								"order"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Starbucks API",
			"item": [
				{
					"name": "Place Starbucks Order (V1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"starbucks_order_id\", response.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"take-out\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"whole\",\n      \"size\": \"large\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v1/starbucks/order",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"starbucks",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Starbucks Order (V1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v1/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Starbucks Order (V1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"dine-in\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"skim\",\n      \"size\": \"large\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v1/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Starbucks Order (V1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/v1/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pay For Starbucks Order (V1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v1/starbucks/order/{{starbucks_order_id}}/pay",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"starbucks",
								"order",
								"{{starbucks_order_id}}",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Starbucks Orders (V1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/v1/starbucks/orders",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"starbucks",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place Starbucks Order (V2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"starbucks_order_id\", response.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"take-out\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"whole\",\n      \"size\": \"large\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/starbucks/order",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"starbucks",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Starbucks Order (V2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//var response = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Starbucks Order (V2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"dine-in\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"skim\",\n      \"size\": \"large\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Starbucks Order (V2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Starbucks Order - ETAG (V2)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "If-None-Match",
								"value": "W/\"73c2bec219458beb267e7e7587f1b7bb\""
							}
						],
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pay For Starbucks Order (V2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/starbucks/order/{{starbucks_order_id}}/pay",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"starbucks",
								"order",
								"{{starbucks_order_id}}",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Starbucks Orders (V2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var response = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/starbucks/orders",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"starbucks",
								"orders"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Starbucks Kong 2.0.2",
			"item": [
				{
					"name": "Kong Server Status (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/status",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Cluster Status (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/cluster",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"cluster"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Node Information (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}"
						}
					},
					"response": []
				},
				{
					"name": "Kong List APIs (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong List Route",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Orders API (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c387b08-35f7-4ee4-9369-dc11704f3c5c",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"service\", response.name);",
									"postman.setGlobalVariable(\"Host\", response.host)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"starbucks\",\n    \"url\": \"http://starbucks:9090/v3/starbucks\"\n}"
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Orders Route (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a1c9199-b8a4-4afa-a10c-87a5cb9e300d",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"route\", response.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"starbucksRouted\",\n\t\"protocols\": [\"http\"],\n\t\"service\": \"starbucks\",\n\t\"paths\": [\"/starbucks\"],\n\t\"strip_path\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/{{service}}/routes",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"{{service}}",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Ping API (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c387b08-35f7-4ee4-9369-dc11704f3c5c",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"service\", response.name);",
									"postman.setGlobalVariable(\"Host\", response.host)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"starbucksPing\",\n    \"url\": \"http://starbucks:9090/\"\n}"
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Ping Route (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a1c9199-b8a4-4afa-a10c-87a5cb9e300d",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"route\", response.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"starbucksPingRouted\",\n\t\"protocols\": [\"http\"],\n\t\"service\": \"starbucks\",\n\t\"paths\": [\"/\"],\n\t\"strip_path\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/{{service}}/routes",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"{{service}}",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Client Add (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5a5b22d-ec7c-4e24-b64f-44fd7f1ca61e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"consumer\", response.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"apiclient\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Add Key-Auth plugin to Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65225aeb-a702-4875-82a2-62b159748cf6",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"plugin_id\", response.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"key-auth\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8001/services/{{service}}/plugins",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8001",
							"path": [
								"services",
								"{{service}}",
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Set API Key to Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb868395-bb2d-4c1b-a38c-2596cc72fd86",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"starbucks_api_key\", response.key);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"key\":\"20200318A\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/{{consumer}}/key-auth",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								"{{consumer}}",
								"key-auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Clients List (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Get API Details (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis/starbucks",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis",
								"starbucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Get List of API Plugins (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/plugins",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Orders API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/starbucks",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"starbucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Orders Route (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/routes/starbucksRouted",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"routes",
								"starbucksRouted"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Ping API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/starbucksPing",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"starbucksPing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Ping Route (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/routes/starbucksPingRouted",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"routes",
								"starbucksPingRouted"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Client Delete (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "apiclient",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/{{consumer}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								"{{consumer}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Plugin Remove from API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/plugins/{{plugin_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"plugins",
								"{{plugin_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Ping (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Place Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40a11bf9-1c30-4edb-9b27-b56c5adeefe5",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"starbucks_order_id\", response.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "Contenat-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"take-out\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"whole\",\n      \"size\": \"large\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Cancel Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "893615ad-a6e9-4c45-96de-021104b9c65f",
								"exec": [
									"//var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Update Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51134856-7fe5-4cf1-b393-3bd253119367",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"dine-in\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"skim\",\n      \"size\": \"large\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Order - ETAG (V3)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "If-None-Match",
								"value": "W/\"35883c054313ac9f0ab39736dce6701a\""
							},
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}?",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							],
							"query": [
								{
									"key": "Host",
									"value": "starbucks",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Pay For Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9623522d-0ddf-410e-b115-8bf4a418bb8e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}/pay",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Orders (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31f31a2f-f3a9-4853-a0d0-615f335267ee",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/orders",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Orders (No API Key)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f5b3c9a-0d2f-4902-8543-5d8312b76efc",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/orders",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"orders"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6fb4921d-decb-4681-b9b8-38de6cab0f4e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "585b12e3-4e42-4516-83fe-369f5a8d4247",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Starbucks Kong 2.0.2 Curl",
			"item": [
				{
					"name": "Kong Server Status (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/status",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Cluster Status (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/cluster",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"cluster"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Node Information (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}"
						}
					},
					"response": []
				},
				{
					"name": "Kong List APIs (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong List Route",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Orders API (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c387b08-35f7-4ee4-9369-dc11704f3c5c",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"service\", response.name);",
									"postman.setGlobalVariable(\"Host\", response.host)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"starbucks\",\n    \"url\": \"http://starbucks:9090/v3/starbucks\"\n}"
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Orders Route (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a1c9199-b8a4-4afa-a10c-87a5cb9e300d",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"route\", response.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"starbucksRouted\",\n\t\"protocols\": [\"http\"],\n\t\"service\": \"starbucks\",\n\t\"paths\": [\"/starbucks\"],\n\t\"strip_path\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/{{service}}/routes",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"{{service}}",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Ping API (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c387b08-35f7-4ee4-9369-dc11704f3c5c",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"service\", response.name);",
									"postman.setGlobalVariable(\"Host\", response.host)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"starbucksPing\",\n    \"url\": \"http://starbucks:9090/\"\n}"
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Ping Route (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a1c9199-b8a4-4afa-a10c-87a5cb9e300d",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"route\", response.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"starbucksPingRouted\",\n\t\"protocols\": [\"http\"],\n\t\"service\": \"starbucks\",\n\t\"paths\": [\"/\"],\n\t\"strip_path\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/{{service}}/routes",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"{{service}}",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Client Add (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5a5b22d-ec7c-4e24-b64f-44fd7f1ca61e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"consumer\", response.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"apiclient\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Add Key-Auth plugin to Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65225aeb-a702-4875-82a2-62b159748cf6",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"plugin_id\", response.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"key-auth\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8001/services/{{service}}/plugins",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8001",
							"path": [
								"services",
								"{{service}}",
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Set API Key to Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb868395-bb2d-4c1b-a38c-2596cc72fd86",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"starbucks_api_key\", response.key);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"key\":\"20200318A\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/{{consumer}}/key-auth",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								"{{consumer}}",
								"key-auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Clients List (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Get API Details (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis/starbucks",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis",
								"starbucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Get List of API Plugins (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/plugins",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Orders API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/starbucks",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"starbucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Orders Route (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/routes/starbucksRouted",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"routes",
								"starbucksRouted"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Ping API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/starbucksPing",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"starbucksPing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Ping Route (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/routes/starbucksPingRouted",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"routes",
								"starbucksPingRouted"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Client Delete (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "apiclient",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/{{consumer}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								"{{consumer}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Plugin Remove from API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/plugins/{{plugin_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"plugins",
								"{{plugin_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Ping (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Place Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40a11bf9-1c30-4edb-9b27-b56c5adeefe5",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"starbucks_order_id\", response.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "Contenat-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"take-out\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"whole\",\n      \"size\": \"large\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Cancel Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "893615ad-a6e9-4c45-96de-021104b9c65f",
								"exec": [
									"//var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Update Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51134856-7fe5-4cf1-b393-3bd253119367",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"dine-in\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"skim\",\n      \"size\": \"large\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Order - ETAG (V3)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "If-None-Match",
								"value": "W/\"35883c054313ac9f0ab39736dce6701a\""
							},
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}?",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							],
							"query": [
								{
									"key": "Host",
									"value": "starbucks",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Pay For Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9623522d-0ddf-410e-b115-8bf4a418bb8e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}/pay",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Orders (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31f31a2f-f3a9-4853-a0d0-615f335267ee",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/orders",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Orders (No API Key)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f5b3c9a-0d2f-4902-8543-5d8312b76efc",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/orders",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"orders"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6fb4921d-decb-4681-b9b8-38de6cab0f4e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "585b12e3-4e42-4516-83fe-369f5a8d4247",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Starbucks Kong 2.0.2 AWS",
			"item": [
				{
					"name": "Kong Server Status (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://35.165.175.107:8001/status",
							"protocol": "http",
							"host": [
								"35",
								"165",
								"175",
								"107"
							],
							"port": "8001",
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Cluster Status (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/cluster",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"cluster"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Node Information (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}"
						}
					},
					"response": []
				},
				{
					"name": "Kong List APIs (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://ec2-34-220-47-109.us-west-2.compute.amazonaws.com:8001/services",
							"protocol": "http",
							"host": [
								"ec2-34-220-47-109",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong List Route",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Orders API (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c387b08-35f7-4ee4-9369-dc11704f3c5c",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"service\", response.name);",
									"postman.setGlobalVariable(\"Host\", response.host)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"starbucks\",\n    \"url\": \"http://network-elb-619846385c5489e3.elb.us-west-2.amazonaws.com:8080/v3/starbucks\"\n}"
						},
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8001/services",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Orders Route (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a1c9199-b8a4-4afa-a10c-87a5cb9e300d",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"route\", response.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"starbucksRouted\",\n\t\"protocols\": [\"http\"],\n\t\"service\": \"starbucks\",\n\t\"paths\": [\"/starbucks\"],\n\t\"strip_path\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8001/services/starbucks/routes",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"services",
								"starbucks",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Ping API (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c387b08-35f7-4ee4-9369-dc11704f3c5c",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"service\", response.name);",
									"postman.setGlobalVariable(\"Host\", response.host)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"starbucksPing\",\n    \"url\": \"http://network-elb-619846385c5489e3.elb.us-west-2.amazonaws.com:8080/\"\n}"
						},
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8001/services",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Ping Route (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a1c9199-b8a4-4afa-a10c-87a5cb9e300d",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"route\", response.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"starbucksPingRouted\",\n\t\"protocols\": [\"http\"],\n\t\"service\": \"starbucks\",\n\t\"paths\": [\"/\"],\n\t\"strip_path\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://ec2-52-12-118-22.us-west-2.compute.amazonaws.com:8001/services/starbucksPing/routes",
							"protocol": "http",
							"host": [
								"ec2-52-12-118-22",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"services",
								"starbucksPing",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Client Add (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5a5b22d-ec7c-4e24-b64f-44fd7f1ca61e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"consumer\", response.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"apiclient\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8001/consumers/",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"consumers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Add Key-Auth plugin to Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65225aeb-a702-4875-82a2-62b159748cf6",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"plugin_id\", response.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"key-auth\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8001/services/starbucks/plugins",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"services",
								"starbucks",
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Add Key-Auth plugin to Service Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65225aeb-a702-4875-82a2-62b159748cf6",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"plugin_id\", response.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"key-auth\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8001/services/starbucksPing/plugins",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"services",
								"starbucksPing",
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Set API Key to Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb868395-bb2d-4c1b-a38c-2596cc72fd86",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"starbucks_api_key\", response.key);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"key\":\"20200318A\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8001/consumers/apiclient/key-auth",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"consumers",
								"apiclient",
								"key-auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Clients List (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Get API Details (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis/starbucks",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis",
								"starbucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Get List of API Plugins (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/plugins",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Orders API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/starbucks",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"starbucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Orders Route (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/routes/starbucksRouted",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"routes",
								"starbucksRouted"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Ping API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://ec2-34-220-47-109.us-west-2.compute.amazonaws.com:8001/services/starbucksPing",
							"protocol": "http",
							"host": [
								"ec2-34-220-47-109",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"services",
								"starbucksPing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Ping Route (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://ec2-34-220-47-109.us-west-2.compute.amazonaws.com:8001/routes/starbucksPingRouted",
							"protocol": "http",
							"host": [
								"ec2-34-220-47-109",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8001",
							"path": [
								"routes",
								"starbucksPingRouted"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Client Delete (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "apiclient",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/{{consumer}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								"{{consumer}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Plugin Remove from API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/plugins/{{plugin_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"plugins",
								"{{plugin_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Ping (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "network-elb-619846385c5489e3.elb.us-west-2.amazonaws.com",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8000/",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8000",
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Place Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40a11bf9-1c30-4edb-9b27-b56c5adeefe5",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"starbucks_order_id\", response.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "Contenat-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"take-out\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"whole\",\n      \"size\": \"large\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8000/starbucks/order",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8000",
							"path": [
								"starbucks",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Cancel Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "893615ad-a6e9-4c45-96de-021104b9c65f",
								"exec": [
									"//var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Update Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51134856-7fe5-4cf1-b393-3bd253119367",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": \"dine-in\",\n  \"items\": [\n    {\n      \"qty\": 1,\n      \"name\": \"latte\",\n      \"milk\": \"skim\",\n      \"size\": \"large\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://ec2-34-220-47-109.us-west-2.compute.amazonaws.com:8000/starbucks/order/c6875269-1bf5-4d32-835e-979f8d5e2ab9",
							"protocol": "http",
							"host": [
								"ec2-34-220-47-109",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8000",
							"path": [
								"starbucks",
								"order",
								"c6875269-1bf5-4d32-835e-979f8d5e2ab9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://ec2-34-220-47-109.us-west-2.compute.amazonaws.com:8000/starbucks/order/{{starbucks_order_id}}",
							"protocol": "http",
							"host": [
								"ec2-34-220-47-109",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8000",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Order - ETAG (V3)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "If-None-Match",
								"value": "W/\"35883c054313ac9f0ab39736dce6701a\""
							},
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/starbucks/order/{{starbucks_order_id}}?",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"starbucks",
								"order",
								"{{starbucks_order_id}}"
							],
							"query": [
								{
									"key": "Host",
									"value": "starbucks",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Pay For Starbucks Order (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9623522d-0ddf-410e-b115-8bf4a418bb8e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://ec2-54-149-150-229.us-west-2.compute.amazonaws.com:8000/starbucks/order/44805db3-fb47-4a84-b315-1b49f529a378/pay",
							"protocol": "http",
							"host": [
								"ec2-54-149-150-229",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8000",
							"path": [
								"starbucks",
								"order",
								"44805db3-fb47-4a84-b315-1b49f529a378",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Orders (V3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31f31a2f-f3a9-4853-a0d0-615f335267ee",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "networl-elb-d79d6f839a3261ad.elb.us-west-2.amazonaws.com",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://35.165.175.107:8000/starbucks/orders",
							"protocol": "http",
							"host": [
								"35",
								"165",
								"175",
								"107"
							],
							"port": "8000",
							"path": [
								"starbucks",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Starbucks API | Get Starbucks Orders (No API Key)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f5b3c9a-0d2f-4902-8543-5d8312b76efc",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://ec2-34-220-47-109.us-west-2.compute.amazonaws.com:8000/starbucks/orders",
							"protocol": "http",
							"host": [
								"ec2-34-220-47-109",
								"us-west-2",
								"compute",
								"amazonaws",
								"com"
							],
							"port": "8000",
							"path": [
								"starbucks",
								"orders"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6fb4921d-decb-4681-b9b8-38de6cab0f4e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "585b12e3-4e42-4516-83fe-369f5a8d4247",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Go Gumball Kong 2.0.2",
			"item": [
				{
					"name": "Kong Server Status (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/status",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Cluster Status (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/cluster",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"cluster"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Node Information (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}"
						}
					},
					"response": []
				},
				{
					"name": "Kong List APIs (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong List Route",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add API (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c387b08-35f7-4ee4-9369-dc11704f3c5c",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"service\", response.name);",
									"postman.setGlobalVariable(\"Host\", response.host)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"starbucks\",\n    \"url\": \"http://starbucks:9090/v3/starbucks\"\n}"
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Add Route (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a1c9199-b8a4-4afa-a10c-87a5cb9e300d",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"route\", response.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"starbucksRouted\",\n\t\"protocols\": [\"http\"],\n\t\"service\": \"starbucks\",\n\t\"paths\": [\"/starbucks\"],\n\t\"strip_path\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/{{service}}/routes",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"{{service}}",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Client Add (Docker)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5a5b22d-ec7c-4e24-b64f-44fd7f1ca61e",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"consumer\", response.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"apiclient\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Add Key-Auth plugin to Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65225aeb-a702-4875-82a2-62b159748cf6",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"plugin_id\", response.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"key-auth\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8001/services/{{service}}/plugins",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8001",
							"path": [
								"services",
								"{{service}}",
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Set API Key to Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb868395-bb2d-4c1b-a38c-2596cc72fd86",
								"exec": [
									"var response = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"starbucks_api_key\", response.key);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"key\":\"20200318A\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/{{consumer}}/key-auth",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								"{{consumer}}",
								"key-auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Clients List (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Get API Details (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/apis/starbucks",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"apis",
								"starbucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Get List of API Plugins (Docker)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/plugins",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Orders API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/starbucks",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"starbucks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Orders Route (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/routes/starbucksRouted",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"routes",
								"starbucksRouted"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Ping API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/services/starbucksPing",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"services",
								"starbucksPing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Delete Ping Route (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/routes/starbucksPingRouted",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"routes",
								"starbucksPingRouted"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong API Client Delete (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "apiclient",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/consumers/{{consumer}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"consumers",
								"{{consumer}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kong Plugin Remove from API (Docker)",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_port}}/plugins/{{plugin_id}}",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_port}}",
							"path": [
								"plugins",
								"{{plugin_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gumball API | Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/goapi/ping",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"goapi",
								"ping"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gumball API | Gumball",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"type": "text",
								"value": "{{Host}}"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/goapi/gumball",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"goapi",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gumball API | Gumball Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"CountGumballs\": 990\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/goapi/gumball",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"goapi",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gumball API | New Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/goapi/order",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"goapi",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gumball API | Order ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/goapi/order/84890269-d44f-45fd-9daf-fdbdf8b87bd0",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"goapi",
								"order",
								"84890269-d44f-45fd-9daf-fdbdf8b87bd0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gumball API | Order Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"type": "text",
								"value": "{{Host}}"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/goapi/order",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"goapi",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gumball API | ProcessOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906cf9af-0131-4a22-8cf8-81e3b698b88c",
								"exec": [
									"var response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apikey",
								"value": "{{starbucks_api_key}}"
							},
							{
								"key": "Host",
								"value": "{{Host}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kong_host}}:{{kong_api_port}}/goapi/orders",
							"protocol": "http",
							"host": [
								"{{kong_host}}"
							],
							"port": "{{kong_api_port}}",
							"path": [
								"goapi",
								"orders"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6fb4921d-decb-4681-b9b8-38de6cab0f4e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "585b12e3-4e42-4516-83fe-369f5a8d4247",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Service Test",
			"item": [
				{
					"name": "Restlet | Hello World (Cloud 9)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "aw-tenant-code",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "Authorization",
								"value": "Basic ZGNhc3Blcjo0cHB0aDByaXR5ITIwMTY="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "_api-key",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "_tenant-code",
								"value": "1DKHA4AAAAG5A5BQADQA"
							}
						],
						"url": {
							"raw": "https://design-paulnguyen.c9users.io/restlet/hello",
							"protocol": "https",
							"host": [
								"design-paulnguyen",
								"c9users",
								"io"
							],
							"path": [
								"restlet",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Hello World (Docker Cloud)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "aw-tenant-code",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "Authorization",
								"value": "Basic ZGNhc3Blcjo0cHB0aDByaXR5ITIwMTY="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "_api-key",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "_tenant-code",
								"value": "1DKHA4AAAAG5A5BQADQA"
							}
						],
						"url": {
							"raw": "http://restapi-hello-1.c2247b6d.cont.dockerapp.io/restlet/hello",
							"protocol": "http",
							"host": [
								"restapi-hello-1",
								"c2247b6d",
								"cont",
								"dockerapp",
								"io"
							],
							"path": [
								"restlet",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Hello World (AWS EC2)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "aw-tenant-code",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "Authorization",
								"value": "Basic ZGNhc3Blcjo0cHB0aDByaXR5ITIwMTY="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "_api-key",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "_tenant-code",
								"value": "1DKHA4AAAAG5A5BQADQA"
							}
						],
						"url": {
							"raw": "http://ec2-54-153-1-207.us-west-1.compute.amazonaws.com/restlet/hello",
							"protocol": "http",
							"host": [
								"ec2-54-153-1-207",
								"us-west-1",
								"compute",
								"amazonaws",
								"com"
							],
							"path": [
								"restlet",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Hello World (AWS IP)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "aw-tenant-code",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "Authorization",
								"value": "Basic ZGNhc3Blcjo0cHB0aDByaXR5ITIwMTY="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "_api-key",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "_tenant-code",
								"value": "1DKHA4AAAAG5A5BQADQA"
							}
						],
						"url": {
							"raw": "http://54.153.1.207/restlet/hello",
							"protocol": "http",
							"host": [
								"54",
								"153",
								"1",
								"207"
							],
							"path": [
								"restlet",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Hello World (AWS DNS)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "aw-tenant-code",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "Authorization",
								"value": "Basic ZGNhc3Blcjo0cHB0aDByaXR5ITIwMTY="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "_api-key",
								"value": "CYE3KZb6pnsrZp9wgwwTriT5EKBLHEZL5njbNRZ0sCw="
							},
							{
								"key": "_tenant-code",
								"value": "1DKHA4AAAAG5A5BQADQA"
							}
						],
						"url": {
							"raw": "http://aws.nguyenresearch.com/restlet/hello",
							"protocol": "http",
							"host": [
								"aws",
								"nguyenresearch",
								"com"
							],
							"path": [
								"restlet",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Hello World (Localhost)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/restlet/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restlet",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Hello World (Docker Local | 8080)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.99.100:8080/restlet/hello",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"99",
								"100"
							],
							"port": "8080",
							"path": [
								"restlet",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Hello World (Docker Local | 80)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.99.100/restlet/hello",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"99",
								"100"
							],
							"path": [
								"restlet",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JSON | Get (AWS DNS)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://aws.nguyenresearch.com:8080/mail",
							"protocol": "http",
							"host": [
								"aws",
								"nguyenresearch",
								"com"
							],
							"port": "8080",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JSON | Put (AWS DNS)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subject\": \"RE: Message to Self\",\n  \"content\": \"Hello There Again!\",\n  \"status\": \"Received\"\n}"
						},
						"url": {
							"raw": "http://aws.nguyenresearch.com:8080/mail",
							"protocol": "http",
							"host": [
								"aws",
								"nguyenresearch",
								"com"
							],
							"port": "8080",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JACKSON | Get (AWS DNS)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://aws.nguyenresearch.com:81/mail",
							"protocol": "http",
							"host": [
								"aws",
								"nguyenresearch",
								"com"
							],
							"port": "81",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Mail Server JACKSON | Put (AWS DNS)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subject\": \"RE: Message to Self\",\n  \"content\": \"Hello There Again!\",\n  \"status\": \"Received\"\n}"
						},
						"url": {
							"raw": "http://aws.nguyenresearch.com:81/mail",
							"protocol": "http",
							"host": [
								"aws",
								"nguyenresearch",
								"com"
							],
							"port": "81",
							"path": [
								"mail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Cart API | Get Order (Localhost | 8080)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8080/cart",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet | Cart API | Get Order (AWS | 8080)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://aws.nguyenresearch.com:8080/cart",
							"protocol": "http",
							"host": [
								"aws",
								"nguyenresearch",
								"com"
							],
							"port": "8080",
							"path": [
								"cart"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Gumball Test",
			"item": [
				{
					"name": "Restlet Gumball Machine | Get Banner",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Insert Quarter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"insert-quarter\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Turn Crank",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"turn-crank\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Get Banner (V1)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/v1/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Insert Quarter (V1)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"insert-quarter\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v1/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Turn Crank (V1)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"turn-crank\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v1/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v1",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Get Banner (V2)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Insert Quarter (V2)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"insert-quarter\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Turn Crank (V2)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"turn-crank\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v2/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v2",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Get Banner (V3)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/v3/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v3",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Place Order (V3)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"payment\" : \"quarter\",   \n  \"action\": \"place-order\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v3/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v3",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Get Banner (V4)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/v4/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v4",
								"gumball"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restlet Gumball Machine | Place Order (V4)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"payment\" : \"quarter\",   \n  \"action\": \"place-order\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/v4/gumball",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"v4",
								"gumball"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}